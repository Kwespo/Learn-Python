ARITHMATIC OPERATORS

+ = Add  x + y
- = Sub  x - y
*	Multiplication	x * y	
/	Division	x / y	
%	Modulus	x % y	
    Modulus gives the remainer after the division eg: 5&2 == 1 (one remains)
**	Exponentiation	x ** y	
    times the number by the amount eg: 2**5 == 2*2*2*2
//	Floor division	x // y
    Rounds **DOWN** to the nearest whole number (integer) eg: 15//2 = 7 (In actuallity its equal to 7.3)


ASSIGNMENT OPERATORS

=	  x = 5	x = 5	
+=	  x += 3	x = x + 3	
-=	  x -= 3	x = x - 3	
*=	  x *= 3	x = x * 3	
/=	  x /= 3	x = x / 3	
%=	  x %= 3	x = x % 3	
//=	  x //= 3	x = x // 3	
**=	  x **= 3	x = x ** 3	
&=	  x &= 3	x = x & 3	
|=	  x |= 3	x = x | 3	
^=	  x ^= 3	x = x ^ 3	
>>=	  x >>= 3	x = x >> 3	
<<=	  x <<= 3	x = x << 3

COMPARISON OPERATORS

==	Equal	x == y	
!,= 	Not equal	x != y	((WITHOUT THE COMMA, HAD TO PUT IN TO STOP IT SWITCHING TO ITS SYMBOL))
>	Greater than	x > y	
<	Less than	x < y	
>=	Greater than or equal to	x >= y	
<=	Less than or equal to	x <= y

LOGITCAL OPERATORS

and 	Returns True if both statements are true	x < 5 and  x < 10	
or	Returns True if one of the statements is true	x < 5 or x < 4	
not	Reverse the result, returns False if the result is true	not(x < 5 and x < 10)

IDENTITY OPERATORS

is 	Returns True if both variables are the same object	x is y	
is not	Returns True if both variables are not the same object	x is not y

MEMBERSHIP OPERATORS

in 	Returns True if a sequence with the specified value is present in the object	x in y	
not in	Returns True if a sequence with the specified value is not present in the object

BITWISE OPERATORS

& 	AND	Sets each bit to 1 if both bits are 1	x & y	
|	OR	Sets each bit to 1 if one of two bits is 1	x | y	
^	XOR	Sets each bit to 1 if only one of two bits is 1	x ^ y	
~	NOT	Inverts all the bits	~x	
<<	Zero fill left shift	Shift left by pushing zeros in from the right and let the leftmost bits fall off	x << 2	
>>	Signed right shift	Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off	x >> 2

